image:
  repository: similarweb/statusbay
  tag: 0.1.6
  pullPolicy: IfNotPresent

database:
  type: internal

  host: 127.0.0.1 # Redundent if using internal
  port: 3306 # Redundent if using internal
  username: statusbay
  password: changeme
  schema: statusbay

  internal:
    annotations: {}
    service:
      annotations: {}
      # type: ClusterIP
    image:
      repository: mysql
      tag: 5.7
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
    persistence:
      persistentVolumeClaim:
        accessMode: ReadWriteOnce
        storageClass: "-"
        size: 1Gi

redis:
  type: internal

  host: 127.0.0.1 # Redundent if using internal
  port: 6379 # Redundent if using internal
  password:
  db: 0

  internal:
    annotations: {}
    service:
      annotations: {}
      # type: ClusterIP
    image:
      repository: redis
      tag: 5.0.7
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
    persistence:
      persistentVolumeClaim:
        accessMode: ReadWriteOnce
        storageClass: "-"
        size: 1Gi

ingress:
  api:
    annotations: {}
    host: api.statusbay.domain
    # ingressClassName: ''
    # use_tls: false
  ui:
    annotations: {}
    host: statusbay.domain
    # ingressClassName: ''
    # use_tls: false

service:
  api:
    type: ClusterIP
    annotations: {}
    externalPort: 80
  ui:
    type: ClusterIP
    annotations: {}
    externalPort: 80

rbac:
  create: true

serviceAccount:
  create: true
  name:

ui:
  create: true
  replicas: 3
  annotations: {}

  image:
    repository: similarweb/statusbay-ui
    tag: 0.1.6
    pullPolicy: IfNotPresent

  # environmentVars is a list of  enviroment variables to set with the UI deployment. These could be
  # used to set API_URL (using helm configured in helpers),GELF ADDRESS & LOG_LEVEL.
  environmentVars:
    GELF_ADDRESS: 127.0.0.1
    LOG_LEVEL: INFO
  secretVars: []
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

api:
  create: true
  replicas: 2
  annotations: {}
  application:
    log:
      level: INFO
      # gelf_address: 127.0.0.1
    telemetry:
      # flush_interval: 10
      # allowed_prefixes:
      #   - 'abc'
      #   - 'def'
      # blocked_prefixes:
      #   - 'abc'
      #   - 'def'
      # disable_hostname: true
      # metrics_prefix: ''

      # dogstatsd_addr: ''
      # datadog_tags:
      #   - 'tag1:value1'
      #   - 'tag2:value2'

      # allow_metrics_by_default: true

      # prometheus_retention_time_sec: 3600
      # statsd_address: ''
      # statsite_address: ''
    metrics:
      # datadog:
      #   api_key: example-api-key
      #   app_key: example-app-key
      #   cache_expiration: 1m
      # prometheus:
      #   address: http://prometheus-url.domain:9090
    alerts:
      # statuscake:
      #   endpoint: https://app.statuscake.com/API
      #   username: example-username
      #   api_key: example-api-key
      # pingdom:
      #   endpoint: https://api.pingdom.com/api
      #   token: example-token
  environmentVars: {}
  secretVars: []
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

watcher:
  kubernetes:
    create: true
    annotations: {}
    environmentVars: {}
    secretVars: []
    application:
      cluster_name: default
      log:
        level: INFO
        # gelf_address: 127.0.0.1
      telemetry:
        # flush_interval: 10
        # allowed_prefixes:
        #   - 'abc'
        #   - 'def'
        # blocked_prefixes:
        #   - 'abc'
        #   - 'def'
        # disable_hostname: true
        # metrics_prefix: ''

        # dogstatsd_addr: ''
        # datadog_tags:
        #   - 'tag1:value1'
        #   - 'tag2:value2'

        # allow_metrics_by_default: true

        # prometheus_retention_time_sec: 3600
        # statsd_address: ''
        # statsite_address: ''
      applies:
        save_interval: 2s
        max_apply_time: 10m
        check_finish_delay: 5s
        collect_data_after_apply_finish: 10s
      # slack:
      #   token: example-slack-token
      #   default_channels:
      #     - "#example-channel"
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
